{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_vestingContract",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "ECDSAInvalidSignature",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "length",
						"type": "uint256"
					}
				],
				"name": "ECDSAInvalidSignatureLength",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "ECDSAInvalidSignatureS",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidShortString",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "str",
						"type": "string"
					}
				],
				"name": "StringTooLong",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "EIP712DomainChanged",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "_eAmount",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "_key",
						"type": "bytes32"
					}
				],
				"name": "addAllocation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_eAmount",
						"type": "bytes"
					}
				],
				"name": "addEmp",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "_key",
						"type": "bytes32"
					}
				],
				"name": "addEmploy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "euint32",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "euint32",
								"name": "cliffDuration",
								"type": "uint256"
							},
							{
								"internalType": "euint32",
								"name": "totalDuration",
								"type": "uint256"
							},
							{
								"internalType": "euint32",
								"name": "amountTotal",
								"type": "uint256"
							},
							{
								"internalType": "euint32",
								"name": "releaseAtStartPercentage",
								"type": "uint256"
							},
							{
								"internalType": "euint32",
								"name": "releaseAtCliffPercentage",
								"type": "uint256"
							},
							{
								"internalType": "euint32",
								"name": "linearReleasePercentage",
								"type": "uint256"
							}
						],
						"internalType": "struct IVesting.VestingSchedule",
						"name": "vesting",
						"type": "tuple"
					},
					{
						"internalType": "bytes32",
						"name": "_key",
						"type": "bytes32"
					}
				],
				"name": "addSchedule",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "publicKey",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "signature",
						"type": "bytes"
					}
				],
				"name": "addvalue",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "aimanValue",
				"outputs": [
					{
						"internalType": "euint32",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_amount",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "_key",
						"type": "bytes32"
					}
				],
				"name": "claim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "key",
						"type": "bytes32"
					}
				],
				"name": "claimableAmount",
				"outputs": [
					{
						"internalType": "euint32",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "company",
				"outputs": [
					{
						"internalType": "euint32",
						"name": "employs",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"internalType": "euint32",
						"name": "totalFund",
						"type": "uint256"
					},
					{
						"internalType": "euint32",
						"name": "totalClaimedFund",
						"type": "uint256"
					},
					{
						"internalType": "euint32",
						"name": "totalLocked",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "ercAddres",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_string",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_registeryear",
						"type": "uint256"
					}
				],
				"name": "createCompanykey",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "eip712Domain",
				"outputs": [
					{
						"internalType": "bytes1",
						"name": "fields",
						"type": "bytes1"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "version",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "chainId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "verifyingContract",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "salt",
						"type": "bytes32"
					},
					{
						"internalType": "uint256[]",
						"name": "extensions",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "employDetails",
				"outputs": [
					{
						"internalType": "address",
						"name": "stakeholder",
						"type": "address"
					},
					{
						"internalType": "euint32",
						"name": "totalAllocation",
						"type": "uint256"
					},
					{
						"internalType": "euint32",
						"name": "unlocked",
						"type": "uint256"
					},
					{
						"internalType": "euint32",
						"name": "claimed",
						"type": "uint256"
					},
					{
						"internalType": "ebool",
						"name": "isClaimAvailable",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "allocationTime",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "isEmpoloyee",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "key",
						"type": "bytes32"
					}
				],
				"name": "request",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "schedule",
				"outputs": [
					{
						"internalType": "euint32",
						"name": "start",
						"type": "uint256"
					},
					{
						"internalType": "euint32",
						"name": "cliffDuration",
						"type": "uint256"
					},
					{
						"internalType": "euint32",
						"name": "totalDuration",
						"type": "uint256"
					},
					{
						"internalType": "euint32",
						"name": "amountTotal",
						"type": "uint256"
					},
					{
						"internalType": "euint32",
						"name": "releaseAtStartPercentage",
						"type": "uint256"
					},
					{
						"internalType": "euint32",
						"name": "releaseAtCliffPercentage",
						"type": "uint256"
					},
					{
						"internalType": "euint32",
						"name": "linearReleasePercentage",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vestingAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"ECDSAInvalidSignature()": [
					{
						"details": "The signature derives the `address(0)`."
					}
				],
				"ECDSAInvalidSignatureLength(uint256)": [
					{
						"details": "The signature has an invalid length."
					}
				],
				"ECDSAInvalidSignatureS(bytes32)": [
					{
						"details": "The signature has an S value that is in the upper half order."
					}
				]
			},
			"events": {
				"EIP712DomainChanged()": {
					"details": "MAY be emitted to signal that the domain could have changed."
				}
			},
			"kind": "dev",
			"methods": {
				"eip712Domain()": {
					"details": "See {IERC-5267}."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/CapTable.sol": "EncryptedCapTable"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/interfaces/IERC5267.sol": {
			"keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
			"license": "MIT",
			"urls": [
				"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
				"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
			]
		},
		"@openzeppelin/contracts/utils/ShortStrings.sol": {
			"keccak256": "0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6",
			"license": "MIT",
			"urls": [
				"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c",
				"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA"
			]
		},
		"@openzeppelin/contracts/utils/StorageSlot.sol": {
			"keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
			"license": "MIT",
			"urls": [
				"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
				"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
				"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
			"keccak256": "0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf",
			"license": "MIT",
			"urls": [
				"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c",
				"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
			"keccak256": "0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0",
			"license": "MIT",
			"urls": [
				"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21",
				"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
			"keccak256": "0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435",
			"license": "MIT",
			"urls": [
				"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c",
				"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
				"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
			]
		},
		"@openzeppelin/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
			"license": "MIT",
			"urls": [
				"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
				"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
			]
		},
		"contracts/CapTable.sol": {
			"keccak256": "0x90d98b689681c4a79375b41d1bab0518ff37c23163319ea0466fa6acda30c807",
			"license": "BSD-3-Clause-Clear",
			"urls": [
				"bzz-raw://000d97e46e52dde70f31c186627f105802571b745187192bb65969ed0d52122f",
				"dweb:/ipfs/QmNZFeDM9CyrbCjHdtZwoiDWn7sD46vFC8nMS7X1YZEbU5"
			]
		},
		"contracts/EncryptedERC20.sol": {
			"keccak256": "0x49763b36a1f9010ab878d3a08e43583a2e2621137cb6d4c84b801865fca3b03d",
			"license": "BSD-3-Clause-Clear",
			"urls": [
				"bzz-raw://498c4aa206890691efde39183e66daea6eebe64ec1c4853469a978bf9ed766f1",
				"dweb:/ipfs/QmReqS1x1CVy9wAXAT8Mx6viGeqkaiYrPEvB795J7B3Fzq"
			]
		},
		"contracts/ICapTable.sol": {
			"keccak256": "0x3aed25ca01128402884590ae62d2e5edccc6e1f2fbbe5319e5023091716772a3",
			"license": "BSD-3-Clause-Clear",
			"urls": [
				"bzz-raw://872cc43e6bb40a35c1e499562a4cb1852a2391228e8a5988f698a72ba0ddc0cf",
				"dweb:/ipfs/QmPEDNTtMbNXGgxKfryXRJ9dzF1xAnCG84PpSnnYS8stWd"
			]
		},
		"contracts/IVesting.sol": {
			"keccak256": "0x733363b1672d61b94f8d1a5094259446c6161fb10fcf0195d1a9cf03ffdfe73e",
			"license": "BSD-3-Clause-Clear",
			"urls": [
				"bzz-raw://a9b4e316594ce3721c16baf068ec3c2b02beff010267af5f6953702c66be49df",
				"dweb:/ipfs/QmUfQZN56rEQBhTZCBAnFfubzwQCqgowuQgQk972oH5bwN"
			]
		},
		"fhevm/abstracts/EIP712WithModifier.sol": {
			"keccak256": "0xa8086e18d314ad91de6ea11e4b8fa57ff5c0e55e3799b3a932635ffdd7684cb4",
			"license": "BSD-3-Clause-Clear",
			"urls": [
				"bzz-raw://2768218b728b5bac28248891a10662720d7f9b4b867006bde11b40df9c972d70",
				"dweb:/ipfs/QmXLoKVMqLo4qKkwksTmFSEesZAp9y19thysjxswMXyDur"
			]
		},
		"fhevm/lib/Impl.sol": {
			"keccak256": "0x85c1304457ffd8e610462bd248c9d4d253a79231134d4d02818ff53e00a39032",
			"license": "BSD-3-Clause-Clear",
			"urls": [
				"bzz-raw://b0c6ed630ebcb196aeb22215a5ecbb76acd0539e92c2f390f7ad665f69848507",
				"dweb:/ipfs/Qma86jfCk2G8xAugwDBBmaSH6tgcVstLrpYq7bnK73ggbx"
			]
		},
		"fhevm/lib/TFHE.sol": {
			"keccak256": "0x2d1eb409b0c2bba4dc9613bd3d56a83d8960d997965021f2cd62dc49a10886ef",
			"license": "BSD-3-Clause-Clear",
			"urls": [
				"bzz-raw://4b953e7990e06b1e2c442d82266c7f25803cc1c42a653829573f458c9ce156e4",
				"dweb:/ipfs/QmPFVQcj5t5dTRiuwFd6NogHUi3XL79a3b9JzNYFMpmsNA"
			]
		}
	},
	"version": 1
}